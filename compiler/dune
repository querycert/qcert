(ocamllex
  (modules sexp_lexer data_lexer lambda_nra_lexer rule_lexer oql_lexer imp_ejson_lexer)
)

(menhir
  (modules sexp_parser data_parser lambda_nra_parser rule_parser oql_parser imp_ejson_parser)
)

(library
 (name qcert_lib)
 (public_name coq-qcert)
 (libraries base64 uri calendar wasm)
)

(copy_files util/*.{ml,mli})
(copy_files wasm/*.{ml,mli})
(copy_files extraction/*.{ml,mli})
(copy_files parsing/*.{mll,mly})
(copy_files# lib/*.{ml,mli})

(rule
  (target runtime.wasm)
  (deps (source_tree ../runtimes/assemblyscript))
  (action
    (progn
      (system "cd ../../../runtimes/assemblyscript && npm run asbuild:untouched")
      (copy ../runtimes/assemblyscript/build/untouched.wasm runtime.wasm)
    )
  )
)

(rule
  (target wasm_runtime.ml)
  (deps runtime.wasm)
  (mode (promote (into generated)))
  (action
    (with-stdout-to wasm_runtime.ml
      (progn (echo "let runtime_wasm = \"")
             (run ../tools/binary_to_string.exe runtime.wasm)
             (echo "\"\n")
      )
    )
  )
)
