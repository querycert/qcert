<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="create_javaservice_artifacts" name="Export artifacts from javaService project">
	<!-- This script creates two sets of artifacts.  (1) Jar files in the local QCert binary directory.
	(2) A 'javaService.zip' to be deployed as a long-running server in some convenient location (to support demo.html). -->
	
	<!-- The target directory for the JavaService artifacts that support local execution -->
	<property name="dest" value="../bin"/>
	
	<target name="create_javaservice_artifacts">

		<!-- Populate the bin/services directory with dependent jars -->
		<delete dir="${dest}/services"/>
		<copy todir="${dest}/services">
			<fileset file="lib/nanohttpd-2.3.1.jar"/>
			<fileset file="lib/gson-2.7.jar"/>
			<fileset file="lib/commons-csv-1.1.jar"/>
			<fileset dir="services"/>
		</copy>

		<!-- Create 'depends' property listing the dependent jars for inclusion in the jar manifest of the main jar -->
		<pathconvert property="depends" pathsep=" ">
			<fileset dir="${dest}/services"/>
			<chainedmapper>
				<flattenmapper/>
				<globmapper from="*" to="services/*"/>
			</chainedmapper>
		</pathconvert>
		
		<!-- Build javaService.jar in the bin location -->
		<delete file="${dest}/javaService.jar"/>
		<jar destfile="${dest}/javaService.jar">
            <manifest>
                <attribute name="Main-Class" value="org.qcert.javasvc.Main"/>
                <attribute name="Class-Path" 
                	value=". ${depends}"/>
            </manifest>
            <fileset dir="bin" excludes="test/**"/>
        </jar>
		
		<!-- Zip up the jars from bin for re-deployment as a remote long-running server.  Note well: in this case, we include
		  the JRules dependencies since some of these deployments will be internal to legal ODM licensees.  But, for a fully
		  public deployment, the JRules jars should be deleted after unzipping. -->
		<delete file="javaService.zip"/>
		<zip destfile="javaService.zip">
			<fileset dir="${dest}" includes="**/*.jar"/>
		</zip>
	</target>
</project>
