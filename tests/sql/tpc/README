For legal reasons we do not reproduce any downloaded TPC tools or templates here.  These are readily obtained
from www.tpc.org, but you will need to agree to the license terms stated there.  Furthermore, the TPC tools
only build and run on Linux (actually, they can be ported to other systems but that is beyond the scope of
what we are supporting here).

If you are already developing on Linux, just switch to the subfolder 'linuxOnly' and follow the README
instructions there.  If you are not developing on Linux but have access to a Linux system image, duplicate the
'linuxOnly' folder on that system with an empty parent directory and follow the README instructions there.
These instructions include how to copy the results back to the main development system.

Once you have done this, you should have many files of the form tpch_*.sql and tpcds_*.sql, also some
supporting files.

TPC-H data:

Execute 'make tpch.data' in this folder.  This target will also execute as a dependency when you run queries
as described below.

To understand our data staging approach, you can study that make target and also its supporting Java programs
SchemaTransformer and DataLoader (source provided).

Compiling and running:

You can compile any query by making its .js file.  That is,

make tpch_1.js

will compile tpch_1.sql and produce tpch_1.js.  A file called (e.g.) tpch_1_stats.json will also be produced
showing some internal statistics (the paper reports these for the TPC-H queries).

You can run any query using an artificial target.  To run (e.g.) tpch_1.js do

make run_tpch_1

If tpch_1.js does not exist, it will be compiled first.

Note that:

- not every query works.  All but one in TPC-H does, however.

- for TPC-H we provide execution for the purpose of evaluating correctness.  We do not claim any performance
  numbers in our papers.

- for TPC-DS, we only attempt compilation, not execution.  Currently, 37 out of 99 TPC-DS queries compile
  successfully.
